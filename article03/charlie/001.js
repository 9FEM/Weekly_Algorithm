/*
체육복
https://school.programmers.co.kr/learn/courses/30/lessons/42862


// 문제 설명
점심시간에 도둑이 들어, 일부 학생이 체육복을 도난당했습니다. 다행히 여벌 체육복이 있는 학생이 이들에게 체육복을 빌려주려 합니다. 학생들의 번호는 체격 순으로 매겨져 있어, 바로 앞번호의 학생이나 바로 뒷번호의 학생에게만 체육복을 빌려줄 수 있습니다. 예를 들어, 4번 학생은 3번 학생이나 5번 학생에게만 체육복을 빌려줄 수 있습니다. 체육복이 없으면 수업을 들을 수 없기 때문에 체육복을 적절히 빌려 최대한 많은 학생이 체육수업을 들어야 합니다.

전체 학생의 수 n, 체육복을 도난당한 학생들의 번호가 담긴 배열 lost, 여벌의 체육복을 가져온 학생들의 번호가 담긴 배열 reserve가 매개변수로 주어질 때, 체육수업을 들을 수 있는 학생의 최댓값을 return 하도록 solution 함수를 작성해주세요.

// 제한사항
전체 학생의 수는 2명 이상 30명 이하입니다.
체육복을 도난당한 학생의 수는 1명 이상 n명 이하이고 중복되는 번호는 없습니다.
여벌의 체육복을 가져온 학생의 수는 1명 이상 n명 이하이고 중복되는 번호는 없습니다.
여벌 체육복이 있는 학생만 다른 학생에게 체육복을 빌려줄 수 있습니다.
여벌 체육복을 가져온 학생이 체육복을 도난당했을 수 있습니다. 이때 이 학생은 체육복을 하나만 도난당했다고 가정하며, 남은 체육복이 하나이기에 다른 학생에게는 체육복을 빌려줄 수 없습니다.
*/

function solution(n, lost, reserve) {
	let count = n - lost.length;  // 일단 다 못빌린다고 가정
	lost.sort((a,b) => (a - b));
	reserve.sort((a,b) => (a - b));
	
	for (let i = 0; i < lost.length; i ++) {  // 본인거 본인이 채우는 경우부터 체크
			if (reserve.indexOf(lost[i]) !== -1) {
					count++;
					reserve[reserve.indexOf(lost[i])] = -10;
					lost[i] = -20;
			}
	}
	for (const x of lost) {
			if (reserve.indexOf(x - 1) !== -1) {  // 앞번호 체크
					count++;
					reserve[reserve.indexOf(x - 1)] = -10;
			}
			else if (reserve.indexOf(x + 1) !== -1) {  // 뒷번호 체크
					count++;
					reserve[reserve.indexOf(x + 1)] = -10;
			}
	}
	return count;
}

/*

단순히
잃어버린 친구들을 훑으면서
1. 본인 여벌이 있는지
2. 앞번호 여벌이 있는지
3. 뒷번호 여벌이 있는지
체크를 했다.

하지만 2번이 본인이 잃어버리고, 여벌이 있는 경우
1번이 먼저 채가는 경우가 발생

-> 본인을 본인이 채울 수 있는 경우를 먼저 전부 체크해줘야 한다.

그럼에도 두가지 케이스에서 터져버린다.
무엇이 문제일까

(5, [4, 2], [3, 5]) 케이스의 경우
4번이 먼저 3번꺼를 채가서, 2번은 가져가지 못한다.
이 경우를 해결하기 위해 미리 정렬을 해준다.

*/